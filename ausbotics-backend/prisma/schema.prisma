generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

model User {
  id                 String              @id @default(uuid())
  email              String              @unique
  password           String
  fullName           String?
  role               Role                @default(USER)
  refreshToken       String?
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  workflows          Workflow[]          @relation("WorkflowUsers")
  workflowExecutions WorkflowExecution[]
}

model Workflow {
  id                 String              @id @default(uuid())
  name               String              @unique
  description        String?
  status             WorkflowStatus      @default(New)
  progress           Int                 @default(0)
  createdAt          DateTime            @default(now())
  subscribedUserId   String
  subscribedUser     User                @relation("WorkflowUsers", fields: [subscribedUserId], references: [id])
  result             ExecutionResult?
  googleSheet        String
  workflowExecutions WorkflowExecution[]
}

model WorkflowExecution {
  id             String                  @id @default(uuid())
  workflowId     String
  executionId    String
  userId         String
  agentMessages  String?
  callbackBooked Boolean                 @default(false)
  leadName       String?
  leadPhone      String?
  leadEmail      String?
  data           String?
  status         WorkflowExecutionStatus @default(None)
  progress       Int                     @default(0)
  createdAt      DateTime                @default(now())
  user           User                    @relation(fields: [userId], references: [id])
  workflow       Workflow                @relation(fields: [workflowId], references: [id])
  result         ExecutionResult         @relation(fields: [executionId], references: [id])
}

model ExecutionResult {
  id                 String                  @id @default(uuid())
  workflowId         String                  @unique
  startTime          DateTime?               @default(now())
  endTime            DateTime?
  status             WorkflowExecutionStatus @default(None)
  totalCalls         Int?
  successfulCalls    Int?
  failedCalls        Int?
  leads              Json?
  tickets            Json?
  appointments       Json?
  summary            Json?
  workflow           Workflow                @relation(fields: [workflowId], references: [id])
  workflowExecutions WorkflowExecution[]
}

model Appointment {
  id            String            @id @default(uuid())
  name          String
  email         String            @unique
  preferredDate DateTime
  preferredTime String
  purpose       String
  status        AppointmentStatus @default(Pending)
  createdAt     DateTime          @default(now())
}

enum Role {
  USER
  ADMIN
  SUPERADMIN
}

enum WorkflowStatus {
  Active
  Paused
  Done
  New
}

enum WorkflowExecutionStatus {
  Success
  ToolCall
  LeadBooked
  None
}

enum AppointmentStatus {
  Pending
  Confirmed
  Cancelled
}
